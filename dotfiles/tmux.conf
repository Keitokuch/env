set -g default-terminal "xterm-256color-italic"
set -ga terminal-overrides ",*256col*:Tc"
TERM=xterm-256color

set -g default-shell /bin/zsh

set -g prefix C-s
unbind C-b

setw -g mode-keys vi
set -g mouse on 
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"  
bind -n WheelDownPane select-pane -t= \; send-keys -M

#bind R source-file ~/.tmux.conf ; display-message "Config reloaded.."

set -g history-limit 10000

bind X kill-window
bind Z kill-session

# --------------------------------------- PANE ------------------------------------------
unbind '"'
bind _ splitw -v -c "#{pane_current_path}"  # vertical split with _
unbind %
bind | splitw -h -c "#{pane_current_path}"  # horizonal split with | 

# select pane with alt+arrow 
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# use Ctrl-hjkl to switch pane 
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# use prefix-hjkl to resize pane
bind -r k resizep -U 3
bind -r j resizep -D 3
bind -r h resizep -L 5
bind -r l resizep -R 5

# ------------------------------ COLORS ----------------------------
color_blue="colour39"
color_black="colour235"
color_orange="colour208"
color_cyan="colour38"
color_grey="colour245"
color_pink="colour225"
color_black_light="colour236"


color_remote_bg=$color_black_light

# ----------------------------------- STATUS BAR -------------------------------------

# Deprecated Oneline Status Bar
#set-option -g status-justify left
#set -g status-right '                                         #[fg=magenta,bold]#S         '
#set -g status-left '#[fg=cyan]#h #[default]#{pane_current_path} ' 
#set -g status-left '#[fg=cyan]#h #[default]#(~/env/tmux_path.sh "#{pane_current_path}") '
#set -g status-right ' #[fg=cyan,bold]*#[fg=magenta,bold]#S#[fg=cyan]* #[default]%Y-%m-%d'
#set -g status-left '   #[fg=magenta,bold]#S    '
#set -g status-right "#[fg=cyan]#h #[default]#{pane_current_path} " 
# set-option -g status-left-length 100
# set-option -g status-right-length 100
#set-window-option -g window-status-format '    #[fg=grey,dim]#I:#[default]#[bold]#W#[default]    '

set -g status 3
set -g status-style bg=$color_black,fg=white
set -g status-interval 12

setw -g window-status-format           '    #[fg=colour245]#I:#W#[default]    '
setw -g window-status-current-format   '    #[default]#[fg=white]#I:#[fg=colour225 bold]#W#[default]    '

window_list="#{W:#{E:window-status-format} ,#{E:window-status-current-format} }"
blue_host="#[default, fg=$color_blue]#h"
cyan_user="#[default, fg=$color_cyan]#(echo $USER)"
date_time="#[default]%a %h-%d %H:%M"
time="#[default]%H:%M"
weather="#[default]#(curl 'wttr.in/?m&format=1' | head -1)"
prefix_sign="#[fg=default, bg=blue dim]  tmux  "
if_prefix="#{?client_prefix,#{prefix_sign},}"
session="#[fg=brightred bold]  [#S]  "
locked_session="#[fg=$color_orange]  [#S]"
public_ip="#[default]#(curl ip.me)"

status_info='  #{T:weather}   #{T:time} #{T:session} #[align=right]'
status_window='#[align=centre]#{T:window_list}'
status_user=' #{T:cyan_user} #[fg=colour254]#{pane_current_path} #[align=right]#{T:if_prefix}'  
status_locked='  #{T:weather}   #{T:time} #{T:locked_session} #[align=right]#{T:blue_host}    #[fg=default]ðŸ”’   '

set -g status-format[0] $status_info
set -g status-format[1] $status_window
set -g status-format[2] $status_user

# ------------------------------- Nested Remote Session ----------------------------
bind -T root M-0 \
    set prefix None \;\
    set key-table nested \;\
    set status on \;\
    set status-format[0] $status_locked \;\
    send-keys M-j \;\
    refresh-client -S

bind -T nested M-0 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status \;\
  set status-format[0] $status_info \;\
  set status-format[1] $status_window \;\
  set status-format[2] $status_user \;\
  send-keys M-k \;\
  refresh-client -S

bind -T nested M-l choose-tree -Zs
bind -T root   M-l choose-tree -Zs

if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# ------------------------------------- WINDOW ------------------------------------
bind c new-window -c "#{pane_current_path}"
# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

bind -n M-[ previous-window
bind -n M-] next-window 
set -g base-index 1      # change window index to grow from 1
set -g allow-rename off

# Alt+number to switch to window 
# bind    -T root       M-0                 select-window -t :=0
bind    -T root       M-1                 select-window -t :=1
bind    -T root       M-2                 select-window -t :=2
bind    -T root       M-3                 select-window -t :=3
bind    -T root       M-4                 select-window -t :=4
bind    -T root       M-5                 select-window -t :=5
bind    -T root       M-6                 select-window -t :=6
bind    -T root       M-7                 select-window -t :=7
bind    -T root       M-8                 select-window -t :=8
# bind    -T root       M-9                 select-window -t :=9

# ------------------------------ PLUGINS ------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore   'on'
set -g @continuum-boot      'on'
set -g @continuum-boot-options 'iterm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
