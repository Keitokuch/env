# cpu_usage_script="#(awk \\'{u=\$2+\$4; t=\$2+\$4+\$5; if \\(NR==1\\){u1=u; t1=t;} else print \\(u-u1\\) * 100 / \\(t-t1\\) \"%\"; }\\' <\\(grep \\'cpu \\' /proc/stat\\) <\\(sleep 1;grep \\'cpu \\' /proc/stat\\))"
# cpu_usage_script='curl ip.me'
cpu_usage="#[default]CPU:#(~/env/utils/cpu_usage.sh)"
mem_usage="#[default]MEM:#(~/env/utils/mem_usage.sh)"
public_ip="#[default]#(curl ip.me)"

sysstat="#{T:cpu_usage}  #{T:mem_usage}"

status_remote='#{T:session}#{T:cyan_user}  #[fg=colour254]#{pane_current_path} #[align=right]#{T:if_prefix}'  
# status_remote_locked='  #{T:public_ip} #{T:locked_session}#[align=right]#{T:blue_host}    #[fg=default]ðŸ”’   '
# status_remote_info='  #{T:public_ip} #{T:session}'
status_remote_info=' #{T:sysstat} #{T:session}'
status_remote_locked=' #{T:sysstat} #{T:locked_session}#[align=right]#{T:blue_host}    #[fg=default]ðŸ”’   '

set -g status 3
set -g status-interval 3
set -g status-style bg=$color_black_light,fg=white
set -g status-format[0] $status_remote_info
set -g status-format[1] $status_window
set -g status-format[2] $status_user

bind -n M-n \
    set -g status 3 \;\
    set -g status-format[0] $status_remote_info \;\
    set -g status-format[1] $status_window \;\
    set -g status-format[2] $status_user \;\
    refresh-client -S

bind -n M-m \
    set -g status on \;\
    set -g status-format[0] $status_remote_locked \;\
    refresh-client -S
